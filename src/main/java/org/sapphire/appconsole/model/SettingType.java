//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.17 at 08:41:16 PM IST 
//


package org.sapphire.appconsole.model;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for SettingType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="SettingType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Text"/>
 *     &lt;enumeration value="Select"/>
 *     &lt;enumeration value="Radio"/>
 *     &lt;enumeration value="Checkbox"/>
 *     &lt;enumeration value="TextArea"/>
 *     &lt;enumeration value="List"/>
 *     &lt;enumeration value="Hidden"/>
 *     &lt;enumeration value="Label"/>
 *     &lt;enumeration value="Code"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "SettingType")
@XmlEnum
public enum SettingType {

    @XmlEnumValue("Text")
    TEXT("Text"),
    @XmlEnumValue("Select")
    SELECT("Select"),
    @XmlEnumValue("Radio")
    RADIO("Radio"),
    @XmlEnumValue("Checkbox")
    CHECKBOX("Checkbox"),
    @XmlEnumValue("TextArea")
    TEXT_AREA("TextArea"),
    @XmlEnumValue("List")
    LIST("List"),
    @XmlEnumValue("Hidden")
    HIDDEN("Hidden"),
    @XmlEnumValue("Label")
    LABEL("Label"),
    @XmlEnumValue("Code")
    CODE("Code");
    private final String value;

    SettingType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static SettingType fromValue(String v) {
        for (SettingType c: SettingType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
