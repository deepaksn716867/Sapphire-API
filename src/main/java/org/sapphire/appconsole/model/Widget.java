//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.4-2 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2015.07.17 at 08:41:16 PM IST 
//


package org.sapphire.appconsole.model;

import java.util.ArrayList;
import java.util.List;
import javax.xml.bind.annotation.XmlAccessType;
import javax.xml.bind.annotation.XmlAccessorType;
import javax.xml.bind.annotation.XmlElement;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for Widget complex type.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * 
 * <pre>
 * &lt;complexType name="Widget">
 *   &lt;complexContent>
 *     &lt;extension base="{appconsole}UIComponent">
 *       &lt;sequence>
 *         &lt;element name="WidgetType" type="{appconsole}WidgetType"/>
 *         &lt;element name="Icon" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="Title" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="ClickPageComponentID" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="DoubleClickPageComponentID" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="DetailPageComponentID" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="EditPageComponentID" type="{http://www.w3.org/2001/XMLSchema}string"/>
 *         &lt;element name="ViewMode" type="{appconsole}ViewModeType"/>
 *         &lt;element name="PageViewOption" type="{appconsole}PageViewOptionType"/>
 *         &lt;element name="HideColumns" type="{http://www.w3.org/2001/XMLSchema}string" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="Events" type="{appconsole}Event" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="FilterCriterias" type="{appconsole}FilterCriteria" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="NamedQueries" type="{appconsole}NameQuery" maxOccurs="unbounded" minOccurs="0"/>
 *         &lt;element name="EnabledDataFilter" type="{appconsole}WidgetDateFilterOption"/>
 *       &lt;/sequence>
 *     &lt;/extension>
 *   &lt;/complexContent>
 * &lt;/complexType>
 * </pre>
 * 
 * 
 */
@XmlAccessorType(XmlAccessType.FIELD)
@XmlType(name = "Widget", propOrder = {
    "widgetType",
    "icon",
    "title",
    "clickPageComponentID",
    "doubleClickPageComponentID",
    "detailPageComponentID",
    "editPageComponentID",
    "viewMode",
    "pageViewOption",
    "hideColumns",
    "events",
    "filterCriterias",
    "namedQueries",
    "enabledDataFilter",
    "appurl",
    "appLaunchUrl",
    "appRedirectUrl",
    "launchDirectly",
	"listGraphOption"
})
public class Widget
    extends UIComponent
{

    @XmlElement(name = "WidgetType", required = true)
    protected WidgetType widgetType;
    @XmlElement(name = "Icon", required = true)
    protected String icon;
    @XmlElement(name = "Title", required = true)
    protected String title;
    @XmlElement(name = "ClickPageComponentID", required = true)
    protected String clickPageComponentID;
    @XmlElement(name = "DoubleClickPageComponentID", required = true)
    protected String doubleClickPageComponentID;
    @XmlElement(name = "DetailPageComponentID", required = true)
    protected String detailPageComponentID;
    @XmlElement(name = "EditPageComponentID", required = true)
    protected String editPageComponentID;
    @XmlElement(name = "ViewMode", required = true)
    protected ViewModeType viewMode;
    @XmlElement(name = "PageViewOption", required = true)
    protected PageViewOptionType pageViewOption;
    @XmlElement(name = "HideColumns")
    protected List<String> hideColumns;
    @XmlElement(name = "Events")
    protected List<Event> events;
    @XmlElement(name = "FilterCriterias")
    protected List<FilterCriteria> filterCriterias;
    @XmlElement(name = "NamedQueries")
    protected List<NameQuery> namedQueries;
    @XmlElement(name = "EnabledDataFilter", required = true)
    protected WidgetDateFilterOption enabledDataFilter;
    
    @XmlElement(required = true)
    protected String appurl;
	@XmlElement(required = true)
    protected String appLaunchUrl;
	@XmlElement(required = true)
    protected String appRedirectUrl;
	@XmlElement(required = true)
	protected boolean launchDirectly;
	@XmlElement(name = "listGraphOption")
    protected List<ListGraphOptions> listGraphOption;
	
	/**
     * Gets the value of the widgetType property.
     * 
     * @return
     *     possible object is
     *     {@link WidgetType }
     *     
     */
    public WidgetType getWidgetType() {
        return widgetType;
    }

    /**
     * Sets the value of the widgetType property.
     * 
     * @param value
     *     allowed object is
     *     {@link WidgetType }
     *     
     */
    public void setWidgetType(WidgetType value) {
        this.widgetType = value;
    }

    /**
     * Gets the value of the icon property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getIcon() {
        return icon;
    }

    /**
     * Sets the value of the icon property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setIcon(String value) {
        this.icon = value;
    }

    /**
     * Gets the value of the title property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the value of the title property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setTitle(String value) {
        this.title = value;
    }

    /**
     * Gets the value of the clickPageComponentID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getClickPageComponentID() {
        return clickPageComponentID;
    }

    /**
     * Sets the value of the clickPageComponentID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setClickPageComponentID(String value) {
        this.clickPageComponentID = value;
    }

    /**
     * Gets the value of the doubleClickPageComponentID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDoubleClickPageComponentID() {
        return doubleClickPageComponentID;
    }

    /**
     * Sets the value of the doubleClickPageComponentID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDoubleClickPageComponentID(String value) {
        this.doubleClickPageComponentID = value;
    }

    /**
     * Gets the value of the detailPageComponentID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getDetailPageComponentID() {
        return detailPageComponentID;
    }

    /**
     * Sets the value of the detailPageComponentID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setDetailPageComponentID(String value) {
        this.detailPageComponentID = value;
    }

    /**
     * Gets the value of the editPageComponentID property.
     * 
     * @return
     *     possible object is
     *     {@link String }
     *     
     */
    public String getEditPageComponentID() {
        return editPageComponentID;
    }

    /**
     * Sets the value of the editPageComponentID property.
     * 
     * @param value
     *     allowed object is
     *     {@link String }
     *     
     */
    public void setEditPageComponentID(String value) {
        this.editPageComponentID = value;
    }

    /**
     * Gets the value of the viewMode property.
     * 
     * @return
     *     possible object is
     *     {@link ViewModeType }
     *     
     */
    public ViewModeType getViewMode() {
        return viewMode;
    }

    /**
     * Sets the value of the viewMode property.
     * 
     * @param value
     *     allowed object is
     *     {@link ViewModeType }
     *     
     */
    public void setViewMode(ViewModeType value) {
        this.viewMode = value;
    }

    /**
     * Gets the value of the pageViewOption property.
     * 
     * @return
     *     possible object is
     *     {@link PageViewOptionType }
     *     
     */
    public PageViewOptionType getPageViewOption() {
        return pageViewOption;
    }

    /**
     * Sets the value of the pageViewOption property.
     * 
     * @param value
     *     allowed object is
     *     {@link PageViewOptionType }
     *     
     */
    public void setPageViewOption(PageViewOptionType value) {
        this.pageViewOption = value;
    }

    /**
     * Gets the value of the hideColumns property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the hideColumns property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getHideColumns().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link String }
     * 
     * 
     */
    public List<String> getHideColumns() {
        if (hideColumns == null) {
            hideColumns = new ArrayList<String>();
        }
        return this.hideColumns;
    }

    /**
     * Gets the value of the events property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the events property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getEvents().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link Event }
     * 
     * 
     */
    public List<Event> getEvents() {
        if (events == null) {
            events = new ArrayList<Event>();
        }
        return this.events;
    }

    /**
     * Gets the value of the filterCriterias property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the filterCriterias property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getFilterCriterias().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link FilterCriteria }
     * 
     * 
     */
    public List<FilterCriteria> getFilterCriterias() {
        if (filterCriterias == null) {
            filterCriterias = new ArrayList<FilterCriteria>();
        }
        return this.filterCriterias;
    }

    /**
     * Gets the value of the namedQueries property.
     * 
     * <p>
     * This accessor method returns a reference to the live list,
     * not a snapshot. Therefore any modification you make to the
     * returned list will be present inside the JAXB object.
     * This is why there is not a <CODE>set</CODE> method for the namedQueries property.
     * 
     * <p>
     * For example, to add a new item, do as follows:
     * <pre>
     *    getNamedQueries().add(newItem);
     * </pre>
     * 
     * 
     * <p>
     * Objects of the following type(s) are allowed in the list
     * {@link NameQuery }
     * 
     * 
     */
    public List<NameQuery> getNamedQueries() {
        if (namedQueries == null) {
            namedQueries = new ArrayList<NameQuery>();
        }
        return this.namedQueries;
    }

    /**
     * Gets the value of the enabledDataFilter property.
     * 
     * @return
     *     possible object is
     *     {@link WidgetDateFilterOption }
     *     
     */
    public WidgetDateFilterOption getEnabledDataFilter() {
        return enabledDataFilter;
    }
	
	/**
     * Sets the value of the ListGraphOptions property.
     *      
     */ 
	 
	public List<ListGraphOptions> getListGraphOptions() {
        if (listGraphOption == null) {
        	listGraphOption = new ArrayList<ListGraphOptions>();
        }
        return this.listGraphOption;
    }	

    /**
     * Sets the value of the enabledDataFilter property.
     * 
     * @param value
     *     allowed object is
     *     {@link WidgetDateFilterOption }
     *     
     */ 	 

    public void setEnabledDataFilter(WidgetDateFilterOption value) {
        this.enabledDataFilter = value;
    }

    public String getAppurl() {
		return appurl;
	}

	public void setAppurl(String appurl) {
		this.appurl = appurl;
	}
	
    public String getAppLaunchUrl() {
		return appLaunchUrl;
	}

	public void setAppLaunchUrl(String appLaunchUrl) {
		this.appLaunchUrl = appLaunchUrl;
	}

	public String getAppRedirectUrl() {
		return appRedirectUrl;
	}

	public void setAppRedirectUrl(String appRedirectUrl) {
		this.appRedirectUrl = appRedirectUrl;
	}

	public boolean isLaunchDirectly() {
		return launchDirectly;
	}

	public void setLaunchDirectly(boolean launchDirectly) {
		this.launchDirectly = launchDirectly;
	}

}
